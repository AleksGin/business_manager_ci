services:
  db:
    restart: always
    image: postgres:17.2-alpine
    environment:
      POSTGRES_DB: ${DB_CONFIG__DB_NAME}
      POSTGRES_USER: ${DB_CONFIG__DB_USER}
      POSTGRES_PASSWORD: ${DB_CONFIG__DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data 
    env_file:
      - .env
    ports:
      - "${DB_CONFIG__DB_PORT_FOR_HOST}:5432"
    networks:
      - app-network

  test_db:
    restart: always
    image: postgres:17.2-alpine
    environment:
      POSTGRES_DB: ${TEST_DB_CONFIG__DB_NAME}
      POSTGRES_USER: ${TEST_DB_CONFIG__DB_USER}      
      POSTGRES_PASSWORD: ${TEST_DB_CONFIG__DB_PASSWORD}
    ports:
      - "${TEST_DB_CONFIG__DB_PORT_FOR_HOST}:5432"
    networks:
      - app-network
  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    ports:
      - "${APP_CONFIG__PORT}:8000"
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - ./app/src/static:/app/src/static
      - ./app/migrations:/app/migrations
    restart: unless-stopped
    networks:
      - app-network

  migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    env_file:
      - .env
    depends_on:
      - db
    profiles:
      - migration
    volumes:
      - ./app/migrations:/app/migrations
    networks:
      - app-network


networks:
  app-network:
    driver: bridge


volumes:
  pgdata:
