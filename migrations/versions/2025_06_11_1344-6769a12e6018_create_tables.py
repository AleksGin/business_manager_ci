"""create tables

Revision ID: 6769a12e6018
Revises:
Create Date: 2025-06-11 13:44:12.525663

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6769a12e6018"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("surname", sa.String(), nullable=False),
        sa.Column(
            "gender",
            sa.Enum("MALE", "FEMALE", name="genderenum"),
            nullable=False,
        ),
        sa.Column("birth_date", sa.Date(), nullable=False),
        sa.Column(
            "role",
            sa.Enum("EMPLOYEE", "MANAGER", "ADMIN", name="roleenum"),
            nullable=True,
        ),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "teams",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("owner_uuid", sa.Uuid(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["owner_uuid"],
            ["users.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "meetings",
        sa.Column("title", sa.String(length=120), nullable=False),
        sa.Column("description", sa.String(length=240), nullable=True),
        sa.Column("date_time", sa.DateTime(), nullable=False),
        sa.Column("creator_uuid", sa.Uuid(), nullable=False),
        sa.Column("team_uuid", sa.Uuid(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["creator_uuid"],
            ["users.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["team_uuid"],
            ["teams.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "tasks",
        sa.Column("title", sa.String(length=80), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("deadline", sa.DateTime(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("OPENED", "IN_PROGRESS", "DONE", name="statusenum"),
            nullable=False,
        ),
        sa.Column("assignee_uuid", sa.Uuid(), nullable=True),
        sa.Column("team_uuid", sa.Uuid(), nullable=False),
        sa.Column("creator_uuid", sa.Uuid(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["assignee_uuid"], ["users.uuid"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["creator_uuid"],
            ["users.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["team_uuid"], ["teams.uuid"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "evaluations",
        sa.Column("task_uuid", sa.Uuid(), nullable=False),
        sa.Column("evaluator_uuid", sa.Uuid(), nullable=True),
        sa.Column("evaluated_user_uuid", sa.Uuid(), nullable=True),
        sa.Column(
            "score",
            sa.Enum(
                "UNACCEPTABLE",
                "BAD",
                "SATISFACTORY",
                "GOOD",
                "GREAT",
                name="scoresenum",
            ),
            nullable=False,
        ),
        sa.Column("comment", sa.String(length=200), nullable=True),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["evaluated_user_uuid"], ["users.uuid"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["evaluator_uuid"], ["users.uuid"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["task_uuid"], ["tasks.uuid"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("task_uuid"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "meeting_participants",
        sa.Column("meeting_uuid", sa.UUID(), nullable=True),
        sa.Column("user_uuid", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["meeting_uuid"],
            ["meetings.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"],
            ["users.uuid"],
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("meeting_participants")
    op.drop_table("evaluations")
    op.drop_table("tasks")
    op.drop_table("meetings")
    op.drop_table("teams")
    op.drop_table("users")
    # ### end Alembic commands ###
